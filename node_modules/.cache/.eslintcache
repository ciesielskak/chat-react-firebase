[{"C:\\Users\\Kaci\\Desktop\\chat-react-firebase\\src\\index.js":"1","C:\\Users\\Kaci\\Desktop\\chat-react-firebase\\src\\App.js":"2","C:\\Users\\Kaci\\Desktop\\chat-react-firebase\\src\\Context-Reducer\\StateProvider.js":"3","C:\\Users\\Kaci\\Desktop\\chat-react-firebase\\src\\Context-Reducer\\reducer.js":"4","C:\\Users\\Kaci\\Desktop\\chat-react-firebase\\src\\components\\ChatApp.js":"5","C:\\Users\\Kaci\\Desktop\\chat-react-firebase\\src\\components\\ChatLogin.js":"6","C:\\Users\\Kaci\\Desktop\\chat-react-firebase\\src\\components\\ChatHeader.js":"7","C:\\Users\\Kaci\\Desktop\\chat-react-firebase\\src\\components\\ChatSidebarAndScreen.js":"8","C:\\Users\\Kaci\\Desktop\\chat-react-firebase\\src\\firebase\\firebase.js":"9","C:\\Users\\Kaci\\Desktop\\chat-react-firebase\\src\\components\\ChatScreen.js":"10","C:\\Users\\Kaci\\Desktop\\chat-react-firebase\\src\\components\\ChatInput.js":"11","C:\\Users\\Kaci\\Desktop\\chat-react-firebase\\src\\components\\ChatMessages.js":"12"},{"size":382,"mtime":1616523746630,"results":"13","hashOfConfig":"14"},{"size":584,"mtime":1616525677398,"results":"15","hashOfConfig":"14"},{"size":405,"mtime":1616421564084,"results":"16","hashOfConfig":"14"},{"size":982,"mtime":1616421564097,"results":"17","hashOfConfig":"14"},{"size":316,"mtime":1616423989119,"results":"18","hashOfConfig":"14"},{"size":2237,"mtime":1616443400162,"results":"19","hashOfConfig":"14"},{"size":1527,"mtime":1616525414910,"results":"20","hashOfConfig":"14"},{"size":3267,"mtime":1616525743710,"results":"21","hashOfConfig":"14"},{"size":696,"mtime":1616424576573,"results":"22","hashOfConfig":"14"},{"size":3862,"mtime":1616450772895,"results":"23","hashOfConfig":"14"},{"size":3272,"mtime":1616449134951,"results":"24","hashOfConfig":"14"},{"size":1076,"mtime":1616450909872,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1twzr1",{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},"C:\\Users\\Kaci\\Desktop\\chat-react-firebase\\src\\index.js",[],"C:\\Users\\Kaci\\Desktop\\chat-react-firebase\\src\\App.js",["56","57"],"import React from 'react';\nimport { ChatLogin } from \"./components/ChatLogin\";\n\nimport { useStateValue } from \"./Context-Reducer/StateProvider\";\nimport { ChatApp } from \"./components/ChatApp\";\nimport './sass/index.scss'\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\";\n\nexport const App = () => {\n    const [{ user }] = useStateValue();\n\n    return (\n        <>\n           <BrowserRouter>\n            { !user ? (\n\n                <ChatLogin />\n\n\n\n\n            ) : (\n\n\n\n                    <ChatApp />\n\n\n\n\n\n\n\n            )}\n           </BrowserRouter>\n        </>\n    )\n}","C:\\Users\\Kaci\\Desktop\\chat-react-firebase\\src\\Context-Reducer\\StateProvider.js",[],"C:\\Users\\Kaci\\Desktop\\chat-react-firebase\\src\\Context-Reducer\\reducer.js",[],"C:\\Users\\Kaci\\Desktop\\chat-react-firebase\\src\\components\\ChatApp.js",[],"C:\\Users\\Kaci\\Desktop\\chat-react-firebase\\src\\components\\ChatLogin.js",["58","59","60"],"import React from 'react';\r\nimport firebase from \"firebase\";\r\nimport auth from \"../firebase/firebase\";\r\nimport { providerFacebook } from \"../firebase/firebase\";\r\nimport googlePic from '../images/googlelogin.svg';\r\nimport FacebookPic from '../images/f_logo_RGB-White_58.png';\r\nimport { useStateValue } from \"../Context-Reducer/StateProvider\";\r\n\r\n\r\nexport const ChatLogin = () => {\r\n    const [state, dispatch] = useStateValue();\r\n    const {user, screen, sidebar} = state;\r\n    const SignInWithGoogle = () => {\r\n        auth.setPersistence(firebase.auth.Auth.Persistence.LOCAL)\r\n            .then(() => {\r\n                const providerGoogle = new firebase.auth.GoogleAuthProvider();\r\n                return auth.signInWithPopup(providerGoogle)\r\n                    .then((result ) => {\r\n                        dispatch({\r\n                            type: 'setUser',\r\n                            user: result.user\r\n                        })\r\n                    })\r\n                    .catch((error) => {\r\n                        alert(error.message)\r\n                    })\r\n            })\r\n            .catch((error) => {\r\n                alert(error.message)\r\n            })\r\n    }\r\n    const SignInWithFacebook = () => {\r\n        auth.signInWithPopup(providerFacebook)\r\n            .then((result) => {\r\n                dispatch({\r\n                    type: 'setUser',\r\n                    user: result.user\r\n                })\r\n\r\n            })\r\n            .catch((error) => {\r\n                alert(error.message)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className='chat__login'>\r\n            <div className='chat__login__card'>\r\n            <h2>Przejdź do czatu:</h2>\r\n                <button onClick={SignInWithGoogle} type='button' className='chat__login_btn google'>\r\n                    <img src={googlePic} alt='googlesignin'/>\r\n                    <span>Zaloguj przez Google</span>\r\n                </button>\r\n                <button onClick={SignInWithFacebook} type='button' className='chat__login_btn fb'>\r\n                    <img src={FacebookPic} alt='facebooklogin' />\r\n                    <span>Zaloguj przez Facebook</span>\r\n                </button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","C:\\Users\\Kaci\\Desktop\\chat-react-firebase\\src\\components\\ChatHeader.js",[],"C:\\Users\\Kaci\\Desktop\\chat-react-firebase\\src\\components\\ChatSidebarAndScreen.js",["61","62","63","64","65","66","67"],"import React, { useState, useEffect } from 'react';\r\nimport { Route, Switch, useHistory } from \"react-router\";\r\nimport { useStateValue } from \"../Context-Reducer/StateProvider\";\r\nimport { db } from \"../firebase/firebase\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { ChatScreen } from \"./ChatScreen\";\r\n\r\nexport const ChatSidebarAndScreen = () => {\r\n\r\n    const [channels, setChannels] = useState([])\r\n    const [state, dispatch] = useStateValue();\r\n    const {user, screen, sidebar, searchInput} = state;\r\n\r\n\r\n    useEffect(() => {\r\n        db.collection('rooms').onSnapshot((snapshot) => (\r\n            setChannels(\r\n                snapshot.docs.map((doc) => ({\r\n                    id: doc.id,\r\n                    name: doc.data().name\r\n                }))\r\n            )\r\n        ))\r\n\r\n    }, []);\r\n\r\n    const addChannel = () => {\r\n        const channelName = prompt('Wpisz nazwę czatu i dodaj go do listy tematów');\r\n        if(channelName) {\r\n            db.collection('rooms').add({\r\n                name: channelName\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"chat__sidebar__and__screen\">\r\n            <div className={sidebar ? \"chat__sidebar__component\" : 'chat__sidebar__component mobileHidden'}>\r\n                <div className='chat__channel__box'>\r\n                    <div className='chat__channel__box__addChannel' onClick={addChannel}>\r\n                        <p>Dodaj temat</p>\r\n                        <AddIcon className='chat__channel__box__plusIcon' id='plusIcon' />\r\n                    </div>\r\n                </div>\r\n                <div className='chat__sidebar__component__list'>\r\n                    <ul>\r\n                        {\r\n                            channels.filter((channel) => {\r\n                                if (searchInput === '') {\r\n                                    return channel\r\n                                }\r\n                                else if (channel.name.toLowerCase().includes(searchInput.toLowerCase())) {\r\n                                    return channel\r\n                                }\r\n                            }).map(channel => (\r\n                                <li key={channel.id}>\r\n                                    <SidebarOption title={channel.name} id={channel.id} />\r\n                                </li>\r\n                            ))}\r\n\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <Switch>\r\n                <Route path='/:roomId?'>\r\n                    <ChatScreen />\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst SidebarOption = ({ title, id }) => {\r\n    const [state, dispatch] = useStateValue();\r\n    const {user, screen, sidebar} = state;\r\n\r\n\r\n    const history = useHistory();\r\n    const selectChannel = () => {\r\n        history.push(`/${id}`)\r\n    }\r\n\r\n    const showScreen = () => {\r\n        dispatch({\r\n            type: 'showScreen'\r\n        })\r\n    }\r\n\r\n    return (\r\n\r\n        <div className='chat__sidebar__option' onClick={() => {selectChannel(); showScreen()}}>\r\n            <h4 className='chat__sidebar__option__channel'>\r\n                <span className=\"chat__sidebar__option__hash\">#</span>{title}</h4>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Kaci\\Desktop\\chat-react-firebase\\src\\firebase\\firebase.js",[],"C:\\Users\\Kaci\\Desktop\\chat-react-firebase\\src\\components\\ChatScreen.js",["68","69"],"import React, { useEffect, useState } from 'react';\r\nimport { useStateValue } from \"../Context-Reducer/StateProvider\";\r\nimport { useParams } from \"react-router\";\r\nimport {db} from '../firebase/firebase';\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport ReactScrollableFeed from 'react-scrollable-feed';\r\nimport { Message } from \"./ChatMessages\";\r\nimport { ChatInput } from \"./ChatInput\";\r\n\r\n\r\nexport const ChatScreen = () => {\r\n    const { roomId } = useParams();\r\n    const [roomDetails, setRoomDetails] = useState(null);\r\n    const [roomMessages, setRoomMessages] = useState([]);\r\n    const [state, dispatch] = useStateValue();\r\n    const {user, screen, sidebar} = state;\r\n\r\n\r\n    useEffect(() => {\r\n        if(roomId) {\r\n            db.collection('rooms')\r\n                .doc(roomId)\r\n                .onSnapshot((snapshot) => setRoomDetails(snapshot.data()));\r\n        }\r\n        db.collection('rooms').doc(roomId)\r\n            .collection('messages')\r\n            .orderBy('timestamp', 'asc')\r\n            .onSnapshot(snapshot => setRoomMessages(snapshot.docs.map(doc => {\r\n                return {\r\n                    ...doc.data(),\r\n                    id: doc.id\r\n                }\r\n            })))\r\n\r\n    }, [roomId]);\r\n\r\n    const removeMsg = (e) => {\r\n\r\n        const currentTargetID = e.currentTarget.id\r\n\r\n        console.log(currentTargetID)\r\n        db.collection(\"rooms\")\r\n            .doc(roomId)\r\n            .collection('messages')\r\n            .doc(currentTargetID)\r\n            .delete()\r\n            .then(() => {\r\n                console.log(\"Document successfully deleted!\");\r\n            }).catch((error) => {\r\n            console.error(\"Error removing document: \", error);\r\n        });\r\n\r\n\r\n    }\r\n\r\n    const backToSidebar = () => {\r\n        dispatch({\r\n            type: 'showSidebar'\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {roomId ?\r\n                <div className={sidebar ? 'chat__screen__component mobileHidden' : 'chat__screen__component'}>\r\n\r\n                    <div className=\"chat__screen__header\">\r\n                        <div className=\"chat__screen__header__left\">\r\n                            <h4 className='chat__screen__header_channelName'>\r\n                                <strong>#{roomDetails?.name}</strong>\r\n                            </h4>\r\n                        </div>\r\n                        <div className='chat__screen__header__right'>\r\n                            <div onClick={backToSidebar} className='return__to__sidebar largeScreenHidden'>\r\n                                <ArrowBackIcon />\r\n                                <p>Wróć</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='chat__screen__messages'>\r\n                        <ReactScrollableFeed className='scrollableFeed'>\r\n                            {roomMessages.map(({message, timestamp, username, userimage, id, file}) => (\r\n                                <Message key={id}\r\n                                         id={id}\r\n                                         message={message}\r\n                                         timestamp={timestamp}\r\n                                         username={username}\r\n                                         userimage={userimage}\r\n                                         removeMsg={removeMsg}\r\n                                         file={file}\r\n                                />\r\n                            ))}\r\n                        </ReactScrollableFeed>\r\n                    </div>\r\n                    <ChatInput channelName={roomDetails?.name} channelId={roomId} />\r\n                </div>\r\n\r\n                :\r\n                <div className='chat__screen__default mobileHidden'>\r\n\r\n                </div>\r\n\r\n            }\r\n        </>\r\n    )\r\n}","C:\\Users\\Kaci\\Desktop\\chat-react-firebase\\src\\components\\ChatInput.js",["70"],"import React, { useState } from 'react';\r\nimport {db} from \"../firebase/firebase\";\r\nimport 'firebase/firestore';\r\nimport firebase from 'firebase/app';\r\nimport {useStateValue} from '../Context-Reducer/StateProvider'\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport 'emoji-mart/css/emoji-mart.css'\r\nimport { Picker } from \"emoji-mart\";\r\nimport { firebaseApp } from \"../firebase/firebase\";\r\n\r\n\r\nexport const ChatInput = ({ channelName, channelId }) => {\r\n    const [input, setInput] = useState('');\r\n    const [{user}, dispatch] = useStateValue();\r\n    const [emojiVisible, setEmojiVisible] = useState(false);\r\n    const [fileUrl, setFileUrl] = useState(false)\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        if (channelId) {\r\n            db.collection('rooms')\r\n                .doc(channelId)\r\n                .collection('messages')\r\n                .add({\r\n                    message: input,\r\n                    timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                    username: user.displayName,\r\n                    userimage: user.photoURL,\r\n                    file: fileUrl\r\n                })\r\n\r\n        }\r\n        setInput('')\r\n\r\n    }\r\n\r\n    const addEmoji = e => {\r\n        let emoji = (e.native);\r\n\r\n        setInput(input + emoji)\r\n    }\r\n\r\n    const showEmojis = () => {\r\n        setEmojiVisible(prevState => !prevState)\r\n    }\r\n    const selectFile = async e => {\r\n        const file = e.target.files[0];\r\n\r\n        const storageRef = firebaseApp.storage().ref();\r\n\r\n        if (file === undefined) {\r\n            setFileUrl(false)\r\n        }\r\n        else {\r\n            const fileRef = storageRef.child(file.name);\r\n\r\n            await fileRef.put(file)\r\n            setFileUrl(await fileRef.getDownloadURL())\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className='chat__input'>\r\n            <form onSubmit={sendMessage}>\r\n                <div className='chat__input__textfield'>\r\n                    <input\r\n                        type='text'\r\n                        onChange={(e) => setInput(e.target.value)}\r\n                        value={input}\r\n                        placeholder='Wpisz wiadomość' />\r\n                    <span className='chat__input__emojiIcon'\r\n                          onClick={showEmojis}>\r\n                       {String.fromCodePoint(0x1f600)}\r\n                   </span>\r\n                    <button type='submit'>\r\n                        <SendIcon className='chat__input__sendicon'/>\r\n                    </button>\r\n                </div>\r\n                <input id=\"file__input\"\r\n                       type=\"file\"\r\n                       onChange={selectFile}\r\n                />\r\n            </form>\r\n\r\n            <span style={emojiVisible ?{\r\n                    position: \"absolute\",\r\n                    bottom: 120,\r\n                    right: 0,\r\n                    cssFloat: \"right\",\r\n                    marginLeft: \"200px\"\r\n                } :\r\n                {\r\n                    display: 'none'\r\n                }}>\r\n                    <Picker\r\n                        onSelect={addEmoji}\r\n                        emojiTooltip={true}\r\n                        set='apple'/>\r\n                </span>\r\n\r\n        </div>\r\n    )\r\n}","C:\\Users\\Kaci\\Desktop\\chat-react-firebase\\src\\components\\ChatMessages.js",["71"],"import React, { useState } from 'react';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\nexport const Message = ({message, timestamp, username, userimage, id, removeMsg, file}) => {\r\n    const [popup, setPopUp] = useState(false)\r\n\r\n    return (\r\n        <div className='chat__message' id={id} onDoubleClick={() => setPopUp(prevState => !prevState)}>\r\n            <img src={userimage} alt='userimage'/>\r\n            <div className='chat__message__info'>\r\n                <h4>{username} <span\r\n                    className='chat__message__timestamp'>{new Date(timestamp?.toDate()).toLocaleString()}</span>\r\n                </h4>\r\n                <p>{message}</p>\r\n\r\n                {file &&\r\n                <>\r\n                    <p className='openFile'>Otwórz plik:</p>\r\n                    <a className='fileLink' href={file} target='_blank'>{file}</a>\r\n                </>\r\n                }\r\n\r\n            </div>\r\n            {popup && <DeleteForeverIcon id={id} onClick={removeMsg} className='chat__message__deleteBtn'/>}\r\n        </div>\r\n    )\r\n}",{"ruleId":"72","severity":1,"message":"73","line":7,"column":24,"nodeType":"74","messageId":"75","endLine":7,"endColumn":30},{"ruleId":"72","severity":1,"message":"76","line":7,"column":32,"nodeType":"74","messageId":"75","endLine":7,"endColumn":37},{"ruleId":"72","severity":1,"message":"77","line":12,"column":12,"nodeType":"74","messageId":"75","endLine":12,"endColumn":16},{"ruleId":"72","severity":1,"message":"78","line":12,"column":18,"nodeType":"74","messageId":"75","endLine":12,"endColumn":24},{"ruleId":"72","severity":1,"message":"79","line":12,"column":26,"nodeType":"74","messageId":"75","endLine":12,"endColumn":33},{"ruleId":"72","severity":1,"message":"80","line":11,"column":19,"nodeType":"74","messageId":"75","endLine":11,"endColumn":27},{"ruleId":"72","severity":1,"message":"77","line":12,"column":12,"nodeType":"74","messageId":"75","endLine":12,"endColumn":16},{"ruleId":"72","severity":1,"message":"78","line":12,"column":18,"nodeType":"74","messageId":"75","endLine":12,"endColumn":24},{"ruleId":"81","severity":1,"message":"82","line":48,"column":55,"nodeType":"83","messageId":"84","endLine":48,"endColumn":57},{"ruleId":"72","severity":1,"message":"77","line":76,"column":12,"nodeType":"74","messageId":"75","endLine":76,"endColumn":16},{"ruleId":"72","severity":1,"message":"78","line":76,"column":18,"nodeType":"74","messageId":"75","endLine":76,"endColumn":24},{"ruleId":"72","severity":1,"message":"79","line":76,"column":26,"nodeType":"74","messageId":"75","endLine":76,"endColumn":33},{"ruleId":"72","severity":1,"message":"77","line":16,"column":12,"nodeType":"74","messageId":"75","endLine":16,"endColumn":16},{"ruleId":"72","severity":1,"message":"78","line":16,"column":18,"nodeType":"74","messageId":"75","endLine":16,"endColumn":24},{"ruleId":"72","severity":1,"message":"80","line":14,"column":20,"nodeType":"74","messageId":"75","endLine":14,"endColumn":28},{"ruleId":"85","severity":1,"message":"86","line":19,"column":21,"nodeType":"87","endLine":19,"endColumn":73},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'user' is assigned a value but never used.","'screen' is assigned a value but never used.","'sidebar' is assigned a value but never used.","'dispatch' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement"]