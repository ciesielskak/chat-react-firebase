{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kaci\\\\Desktop\\\\react-czat-firebase\\\\react-chat-firebase\\\\src\\\\components\\\\ChatScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useStateValue } from \"../Context-Reducer/StateProvider\";\nimport { useParams } from \"react-router\";\nimport { db } from '../firebase/firebase';\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport ReactScrollableFeed from 'react-scrollable-feed';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ChatScreen = () => {\n  _s();\n\n  const {\n    roomId\n  } = useParams();\n  const [roomDetails, setRoomDetails] = useState(null);\n  const [roomMessages, setRoomMessages] = useState([]);\n  const [state, dispatch] = useStateValue();\n  const {\n    user,\n    screen,\n    sidebar\n  } = state;\n  useEffect(() => {\n    if (roomId) {\n      db.collection('rooms').doc(roomId).onSnapshot(snapshot => setRoomDetails(snapshot.data()));\n    }\n\n    db.collection('rooms').doc(roomId).collection('messages').orderBy('timestamp', 'asc').onSnapshot(snapshot => setRoomMessages(snapshot.docs.map(doc => {\n      return { ...doc.data(),\n        id: doc.id\n      };\n    })));\n  }, [roomId]);\n\n  const removeMsg = e => {\n    const currentTargetID = e.currentTarget.id;\n    console.log(currentTargetID);\n    db.collection(\"rooms\").doc(roomId).collection('messages').doc(currentTargetID).delete().then(() => {\n      console.log(\"Document successfully deleted!\");\n    }).catch(error => {\n      console.error(\"Error removing document: \", error);\n    });\n  };\n\n  const backToSidebar = () => {\n    dispatch({\n      type: 'showSidebar'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: roomId ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: sidebar ? 'chat__screen__component mobileHidden' : 'chat__screen__component',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__screen__header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat__screen__header__left\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"chat__screen__header_channelName\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"#\", roomDetails === null || roomDetails === void 0 ? void 0 : roomDetails.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat__screen__header__right\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: backToSidebar,\n            className: \"return__to__sidebar largeScreenHidden\",\n            children: [/*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Wr\\xF3\\u0107\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__screen__messages\",\n        children: /*#__PURE__*/_jsxDEV(ReactScrollableFeed, {\n          className: \"scrollableFeed\",\n          children: roomMessages.map(({\n            message,\n            timestamp,\n            username,\n            userimage,\n            id,\n            file\n          }) => /*#__PURE__*/_jsxDEV(Message, {\n            id: id,\n            message: message,\n            timestamp: timestamp,\n            username: username,\n            userimage: userimage,\n            removeMsg: removeMsg,\n            file: file\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n        channelName: roomDetails === null || roomDetails === void 0 ? void 0 : roomDetails.name,\n        channelId: roomId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__screen__default mobileHidden\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(ChatScreen, \"m4OIZG+oSDXdZBAZrkwReXiS4lk=\", false, function () {\n  return [useParams, useStateValue];\n});\n\n_c = ChatScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatScreen\");","map":{"version":3,"sources":["C:/Users/Kaci/Desktop/react-czat-firebase/react-chat-firebase/src/components/ChatScreen.js"],"names":["React","useEffect","useState","useStateValue","useParams","db","ArrowBackIcon","ReactScrollableFeed","ChatScreen","roomId","roomDetails","setRoomDetails","roomMessages","setRoomMessages","state","dispatch","user","screen","sidebar","collection","doc","onSnapshot","snapshot","data","orderBy","docs","map","id","removeMsg","e","currentTargetID","currentTarget","console","log","delete","then","catch","error","backToSidebar","type","name","message","timestamp","username","userimage","file"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useStateValue } from \"../Context-Reducer/StateProvider\";\r\nimport { useParams } from \"react-router\";\r\nimport {db} from '../firebase/firebase';\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport ReactScrollableFeed from 'react-scrollable-feed';\r\n\r\n\r\nexport const ChatScreen = () => {\r\n    const { roomId } = useParams();\r\n    const [roomDetails, setRoomDetails] = useState(null);\r\n    const [roomMessages, setRoomMessages] = useState([]);\r\n    const [state, dispatch] = useStateValue();\r\n    const {user, screen, sidebar} = state;\r\n\r\n\r\n    useEffect(() => {\r\n        if(roomId) {\r\n            db.collection('rooms')\r\n                .doc(roomId)\r\n                .onSnapshot((snapshot) => setRoomDetails(snapshot.data()));\r\n        }\r\n        db.collection('rooms').doc(roomId)\r\n            .collection('messages')\r\n            .orderBy('timestamp', 'asc')\r\n            .onSnapshot(snapshot => setRoomMessages(snapshot.docs.map(doc => {\r\n                return {\r\n                    ...doc.data(),\r\n                    id: doc.id\r\n                }\r\n            })))\r\n\r\n    }, [roomId]);\r\n\r\n    const removeMsg = (e) => {\r\n\r\n        const currentTargetID = e.currentTarget.id\r\n\r\n        console.log(currentTargetID)\r\n        db.collection(\"rooms\")\r\n            .doc(roomId)\r\n            .collection('messages')\r\n            .doc(currentTargetID)\r\n            .delete()\r\n            .then(() => {\r\n                console.log(\"Document successfully deleted!\");\r\n            }).catch((error) => {\r\n            console.error(\"Error removing document: \", error);\r\n        });\r\n\r\n\r\n    }\r\n\r\n    const backToSidebar = () => {\r\n        dispatch({\r\n            type: 'showSidebar'\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {roomId ?\r\n                <div className={sidebar ? 'chat__screen__component mobileHidden' : 'chat__screen__component'}>\r\n\r\n                    <div className=\"chat__screen__header\">\r\n                        <div className=\"chat__screen__header__left\">\r\n                            <h4 className='chat__screen__header_channelName'>\r\n                                <strong>#{roomDetails?.name}</strong>\r\n                            </h4>\r\n                        </div>\r\n                        <div className='chat__screen__header__right'>\r\n                            <div onClick={backToSidebar} className='return__to__sidebar largeScreenHidden'>\r\n                                <ArrowBackIcon />\r\n                                <p>Wróć</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='chat__screen__messages'>\r\n                        <ReactScrollableFeed className='scrollableFeed'>\r\n                            {roomMessages.map(({message, timestamp, username, userimage, id, file}) => (\r\n                                <Message key={id}\r\n                                         id={id}\r\n                                         message={message}\r\n                                         timestamp={timestamp}\r\n                                         username={username}\r\n                                         userimage={userimage}\r\n                                         removeMsg={removeMsg}\r\n                                         file={file}\r\n\r\n                                />\r\n                            ))}\r\n                        </ReactScrollableFeed>\r\n                    </div>\r\n                    <ChatInput channelName={roomDetails?.name} channelId={roomId} />\r\n                </div>\r\n\r\n                :\r\n\r\n                <div className='chat__screen__default mobileHidden'>\r\n\r\n                </div>\r\n\r\n            }\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}